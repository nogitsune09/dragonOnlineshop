using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using Customer.ViewModel;

namespace Customer.Business
{
    public class CustomerBusiness
    {
        private string connectionString = "your_connection_string_here";

        public string InsertCustomer(string firstName, string lastName, string phoneNumber, string email)
        {
            try
            {
                using (SqlConnection sql = new SqlConnection(connectionString))
                {
                    sql.Open();
                    SqlCommand sqlCmd = sql.CreateCommand();
                    sqlCmd.CommandType = CommandType.StoredProcedure;
                    sqlCmd.CommandText = "InsertCustomer";
                    sqlCmd.Parameters.AddWithValue("@FirstName", firstName);
                    sqlCmd.Parameters.AddWithValue("@LastName", lastName);
                    sqlCmd.Parameters.AddWithValue("@PhoneNumber", phoneNumber);
                    sqlCmd.Parameters.AddWithValue("@Email", email);

                    sqlCmd.ExecuteNonQuery();
                    sql.Close();
                }
                return "OK";
            }
            catch (Exception ex)
            {
                return $"Error: {ex.Message}";
            }
        }

        public string UpdateCustomer(int customerId, string firstName, string lastName, string phoneNumber, string email)
        {
            try
            {
                using (SqlConnection sql = new SqlConnection(connectionString))
                {
                    sql.Open();
                    SqlCommand sqlCmd = sql.CreateCommand();
                    sqlCmd.CommandType = CommandType.StoredProcedure;
                    sqlCmd.CommandText = "UpdateCustomer";
                    sqlCmd.Parameters.AddWithValue("@CustomerID", customerId);
                    sqlCmd.Parameters.AddWithValue("@FirstName", firstName);
                    sqlCmd.Parameters.AddWithValue("@LastName", lastName);
                    sqlCmd.Parameters.AddWithValue("@PhoneNumber", phoneNumber);
                    sqlCmd.Parameters.AddWithValue("@Email", email);

                    sqlCmd.ExecuteNonQuery();
                    sql.Close();
                }
                return "OK";
            }
            catch (Exception ex)
            {
                return $"Error: {ex.Message}";
            }
        }

        public string DeleteCustomer(int customerId)
        {
            try
            {
                using (SqlConnection sql = new SqlConnection(connectionString))
                {
                    sql.Open();
                    SqlCommand sqlCmd = sql.CreateCommand();
                    sqlCmd.CommandType = CommandType.StoredProcedure;
                    sqlCmd.CommandText = "DeleteCustomer";
                    sqlCmd.Parameters.AddWithValue("@CustomerID", customerId);

                    sqlCmd.ExecuteNonQuery();
                    sql.Close();
                }
                return "OK";
            }
            catch (Exception ex)
            {
                return $"Error: {ex.Message}";
            }
        }

        // سایر متدها مانند GetAllCustomers، GetCustomerByID و متدهای جستجو به همان صورت قبلی باقی می‌مانند.
    }
}
