using Microsoft.AspNetCore.Mvc;
using Customer.Business;
using Customer.ViewModel;
using System.Collections.Generic;
using System.Data;

namespace Customer.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class CustomerController : ControllerBase
    {
        private readonly CustomerBusiness _customerBusiness;

        public CustomerController()
        {
            _customerBusiness = new CustomerBusiness();
        }

        [HttpPost("insert")]
        public IActionResult InsertCustomer([FromBody] vmCustomer customer)
        {
            var result = _customerBusiness.InsertCustomer(customer.FirstName, customer.LastName, customer.PhoneNumber, customer.Email);
            if (result == "OK")
            {
                return Ok("Customer inserted successfully.");
            }
            return BadRequest(result);
        }

        [HttpPut("update")]
        public IActionResult UpdateCustomer([FromBody] vmCustomer customer)
        {
            var result = _customerBusiness.UpdateCustomer(customer.CustomerID, customer.FirstName, customer.LastName, customer.PhoneNumber, customer.Email);
            if (result == "OK")
            {
                return Ok("Customer updated successfully.");
            }
            return BadRequest(result);
        }

        [HttpDelete("delete/{id}")]
        public IActionResult DeleteCustomer(int id)
        {
            var result = _customerBusiness.DeleteCustomer(id);
            if (result == "OK")
            {
                return Ok("Customer deleted successfully.");
            }
            return BadRequest(result);
        }

        [HttpGet("all")]
        public IActionResult GetAllCustomers()
        {
            DataSet customers = _customerBusiness.GetAllCustomers();
            return Ok(customers);
        }

        [HttpGet("{id}")]
        public IActionResult GetCustomerByID(int id)
        {
            DataSet customer = _customerBusiness.GetCustomerByID(id);
            return Ok(customer);
        }

        [HttpGet("search/firstname/{firstName}")]
        public IActionResult SearchCustomersByFirstName(string firstName)
        {
            List<vmCustomer> customers = _customerBusiness.SearchCustomersByFirstName(firstName);
            return Ok(customers);
        }

        [HttpGet("search/lastname/{lastName}")]
        public IActionResult SearchCustomersByLastName(string lastName)
        {
            List<vmCustomer> customers = _customerBusiness.SearchCustomersByLastName(lastName);
            return Ok(customers);
        }

        [HttpGet("search/phonenumber/{phoneNumber}")]
        public IActionResult SearchCustomersByPhoneNumber(string phoneNumber)
        {
            List<vmCustomer> customers = _customerBusiness.SearchCustomersByPhoneNumber(phoneNumber);
            return Ok(customers);
        }

        [HttpGet("search/email/{email}")]
        public IActionResult SearchCustomersByEmail(string email)
        {
            List<vmCustomer> customers = _customerBusiness.SearchCustomersByEmail(email);
            return Ok(customers);
        }
    }
}
