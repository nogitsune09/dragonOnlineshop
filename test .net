
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using Microsoft.EntityFrameworkCore;
namespace Rivon_Accounting_API
{
    public class Startup
    {
        public Startup(IConfiguration configuration)
        {
            Configuration = configuration;
        }

        public IConfiguration Configuration { get; }

        // This method gets called by the runtime. Use this method to add services to the container.
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddCors(o => o.AddPolicy("MyPolicy", builder =>
            {
                builder.WithOrigins(new[]{
                    "http://localhost:3000",
                    "http://localhost:3001",
                    "https://erp.rost.ir",
                     "http://erp.rost.ir",
                    "https://ManelliERP.ir",
                     "http://ManelliERP.ir",
                     "https://manelli.Rivon.ir",
                     "https://sunhome.Rivon.ir"

                })
                     .AllowAnyMethod()
                       .AllowAnyHeader()
                       .AllowCredentials();
            }));
            services.AddControllers().AddNewtonsoftJson();
            services.AddDistributedMemoryCache();

            services.AddSession(options =>
            {
                options.IdleTimeout = TimeSpan.FromMinutes(20);//You can set Time  
                options.Cookie.HttpOnly = true;
                options.Cookie.IsEssential = true;
            });
            services.AddDbContextPool<Model.AccountingDB>(options =>
            options.UseSqlServer(Configuration.GetConnectionString("AccountingDB")));
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }

            app.UseRouting();
            app.UseSession();

            app.UseAuthorization();
            app.UseCors(builder =>
            {
                builder.WithOrigins(new[]{
                      "http://localhost:3000",
                    "http://localhost:3001",
                    "https://erp.rost.ir",
                    "http://erp.rost.ir",
                    "https://ManelliERP.ir",
                     "http://ManelliERP.ir",
                     "https://manelli.Rivon.ir",
                     "https://sunhome.Rivon.ir"
                })
                     .AllowAnyMethod()
                       .AllowAnyHeader()
                       .AllowCredentials();
            });
            app.UseEndpoints(endpoints =>
            {
                endpoints.MapControllers();
            });
        }
    }
}
